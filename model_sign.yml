sign-and-verify-model:
  runs-on: self-hosted
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
 
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y git git-lfs python3-venv python3-pip unzip
        git lfs install
 
    - name: Clone model-transparency repository
      run: |
        git clone git@github.com:sigstore/model-transparency.git
        cd model-transparency/model_signing
        python3 -m pip install --require-hashes -r "install/requirements_Linux.txt"
 
    - name: Sign model
      env:
        MODEL_PATH: ${{ secrets.MODEL_PATH }}
      run: |
        cd model-transparency/src/model_signing
        echo "Запуск процесса подписи. Пожалуйста, следуйте инструкциям ниже:"
        python3 main.py sign --path "${MODEL_PATH}" | tee signing_output.log
       
    - name: Wait for manual input
      run: |
        echo "Процесс подписи требует ручного ввода."
        echo "Пожалуйста, проверьте вывод предыдущего шага, перейдите по указанному URL и введите полученный код."
        echo "После завершения процесса подписи, нажмите 'Continue job' в интерфейсе GitHub Actions."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
    - name: Verify signature
      env:
        MODEL_PATH: ${{ secrets.MODEL_PATH }}
        IDENTITY_PROVIDER: https://accounts.google.com
        USER_EMAIL: ${{ secrets.USER_EMAIL }}
      run: |
        echo "Процесс подписи завершен. Проверьте лог выше для подтверждения успешной подписи."
        cd model-transparency/model_signing
        source test_env/bin/activate
        python3 main.py verify --path "${MODEL_PATH}" \
          --identity-provider "${IDENTITY_PROVIDER}" \
          --identity "${USER_EMAIL}"
 
    - name: Locate signature file
      run: |
        SIGNATURE_PATH=$(find ${{ secrets.MODEL_PATH }} -name "model.sig")
        echo "SIGNATURE_PATH=${SIGNATURE_PATH}" >> $GITHUB_ENV
 
    - name: Upload signature artifact
      uses: actions/upload-artifact@v3
      with:
        name: model-signature
        path: ${{ env.SIGNATURE_PATH }}
